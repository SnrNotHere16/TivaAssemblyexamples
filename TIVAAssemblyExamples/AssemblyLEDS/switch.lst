


ARM Macro Assembler    Page 1 


    1 00000000         ; Switch.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Provide functions that initialize a GPIO as an input p
                       in and
    4 00000000         ; allow reading of a positive logic switch.
    5 00000000         ; Use bit-banded I/O.
    6 00000000         ; Daniel and Jonathan Valvano
    7 00000000         ; September 12, 2013
    8 00000000         
    9 00000000         ; This example accompanies the book
   10 00000000         ;  "Embedded Systems: Introduction to Arm Cortex M Micro
                       controllers"
   11 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2013
   12 00000000         ;  Section 4.2.2, Program 4.2, Figure 4.9
   13 00000000         
   14 00000000         ;Copyright 2013 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   15 00000000         ;   You may use, edit, run or distribute this file
   16 00000000         ;   as long as the above copyright notice remains
   17 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   18 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   19 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   20 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   21 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ;For more information about my classes, my research, and
                        my books, see
   23 00000000         ;http://users.ece.utexas.edu/~valvano/
   24 00000000         
   25 00000000         ; negative logic switches connected to PF0 and PF4 on th
                       e Launchpad
   26 00000000         ; red LED connected to PF1 on the Launchpad
   27 00000000         ; blue LED connected to PF2 on the Launchpad
   28 00000000         ; green LED connected to PF3 on the Launchpad
   29 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   30 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   31 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   32 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   33 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   34 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   35 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   36 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   37 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   38 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   39 00000000         ; debugger out of the processor and make it permanently 



ARM Macro Assembler    Page 2 


                       unable to be
   40 00000000         ; debugged or re-programmed.
   41 00000000         
   42 00000000 40004400 
                       GPIO_PORTA_DIR_R
                               EQU              0x40004400
   43 00000000 40004420 
                       GPIO_PORTA_AFSEL_R
                               EQU              0x40004420
   44 00000000 40004510 
                       GPIO_PORTA_PUR_R
                               EQU              0x40004510
   45 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   46 00000000 40004520 
                       GPIO_PORTA_LOCK_R
                               EQU              0x40004520
   47 00000000 40004524 
                       GPIO_PORTA_CR_R
                               EQU              0x40004524
   48 00000000 40004528 
                       GPIO_PORTA_AMSEL_R
                               EQU              0x40004528
   49 00000000 4000452C 
                       GPIO_PORTA_PCTL_R
                               EQU              0x4000452C
   50 00000000         
   51 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   52 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   53 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   54 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   55 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   56 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   57 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   58 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   59 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   60 00000000 40025004 
                       PF0     EQU              0x40025004
   61 00000000 40025040 



ARM Macro Assembler    Page 3 


                       PF4     EQU              0x40025040
   62 00000000 40004080 
                       PA5     EQU              0x40004080
   63 00000000 40025044 
                       SWITCHES
                               EQU              0x40025044
   64 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   65 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   66 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   67 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   68 00000000         
   69 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   70 00000000                 THUMB
   71 00000000                 EXPORT           Switch_Init
   72 00000000                 EXPORT           Switch_Input
   73 00000000                 EXPORT           Board_Init
   74 00000000                 EXPORT           Board_Input
   75 00000000         ;------------Switch_Init------------
   76 00000000         ; Initialize GPIO Port A bit 5 as input
   77 00000000         ; Input: none
   78 00000000         ; Output: none
   79 00000000         ; Modifies: R0, R1
   80 00000000         Switch_Init
   81 00000000 492A            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t A
   82 00000002 6808            LDR              R0, [R1]
   83 00000004 F040 0001       ORR              R0, R0, #0x01 ; set bit 0 to tu
                                                            rn on clock
   84 00000008 6008            STR              R0, [R1]
   85 0000000A BF00            NOP
   86 0000000C BF00            NOP                          ; allow time for cl
                                                            ock to finish
   87 0000000E         ; 2) no need to unlock Port A                 
   88 0000000E 4928            LDR              R1, =GPIO_PORTA_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
   89 00000010 6808            LDR              R0, [R1]
   90 00000012 F020 0020       BIC              R0, #0x20   ; 0 means analog is
                                                             off
   91 00000016 6008            STR              R0, [R1]
   92 00000018 4926            LDR              R1, =GPIO_PORTA_PCTL_R ; 4) con
                                                            figure as GPIO
   93 0000001A 6808            LDR              R0, [R1]
   94 0000001C F420 0070       BIC              R0, #0x00F00000 ; 0 means confi
                                                            gure PA5 as GPIO
   95 00000020 6008            STR              R0, [R1]



ARM Macro Assembler    Page 4 


   96 00000022 4925            LDR              R1, =GPIO_PORTA_DIR_R ; 5) set 
                                                            direction register
   97 00000024 6808            LDR              R0, [R1]
   98 00000026 F020 0020       BIC              R0, #0x20   ; PA5 input
   99 0000002A 6008            STR              R0, [R1]
  100 0000002C 4923            LDR              R1, =GPIO_PORTA_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  101 0000002E 6808            LDR              R0, [R1]
  102 00000030 F020 0020       BIC              R0, #0x20   ; 0 means disable a
                                                            lternate function 
  103 00000034 6008            STR              R0, [R1]
  104 00000036 4922            LDR              R1, =GPIO_PORTA_DEN_R ; 7) enab
                                                            le Port A digital p
                                                            ort
  105 00000038 6808            LDR              R0, [R1]
  106 0000003A F040 0020       ORR              R0, #0x20   ; 1 means enable di
                                                            gital I/O
  107 0000003E 6008            STR              R0, [R1]
  108 00000040 4770            BX               LR
  109 00000042         
  110 00000042         ;------------Switch_Input------------
  111 00000042         ; Read and return the status of PA5
  112 00000042         ; Input: none
  113 00000042         ; Output: R0  0x20 if PA5 high
  114 00000042         ;         R0  0x00 if PA5 low
  115 00000042         ; Modifies: R1
  116 00000042         Switch_Input
  117 00000042 4920            LDR              R1, =PA5    ; pointer to PA5
  118 00000044 6808            LDR              R0, [R1]    ; read just PA5
  119 00000046 4770            BX               LR          ; 0x20 or 0x00
  120 00000048         
  121 00000048         ;------------Board_Init------------
  122 00000048         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  123 00000048         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  124 00000048         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  125 00000048         ; disabled.
  126 00000048         ; Input: none
  127 00000048         ; Output: none
  128 00000048         ; Modifies: R0, R1
  129 00000048         Board_Init
  130 00000048         ; activate clock for Port F
  131 00000048 4918            LDR              R1, =SYSCTL_RCGCGPIO_R ; R1 = &
                                                            SYSCTL_RCGCGPIO_R
  132 0000004A 6808            LDR              R0, [R1]    ; R0 = [R1]
  133 0000004C F040 0020       ORR              R0, R0, #SYSCTL_RCGC2_GPIOF ; R
                                                            0 = R0|SYSCTL_RCGC2
                                                            _GPIOF
  134 00000050 6008            STR              R0, [R1]    ; [R1] = R0
  135 00000052 BF00            NOP
  136 00000054 BF00            NOP                          ; allow time to fin
                                                            ish activating
  137 00000056         ; unlock the lock register
  138 00000056 491C            LDR              R1, =GPIO_PORTF_LOCK_R ; R1 = &
                                                            GPIO_PORTF_LOCK_R
  139 00000058 481C            LDR              R0, =GPIO_LOCK_KEY ; R0 = GPIO_
                                                            LOCK_KEY (unlock GP



ARM Macro Assembler    Page 5 


                                                            IO Port F Commit Re
                                                            gister)
  140 0000005A 6008            STR              R0, [R1]    ; [R1] = R0 = 0x4C4
                                                            F434B
  141 0000005C         ; set commit register
  142 0000005C 491C            LDR              R1, =GPIO_PORTF_CR_R ; R1 = &GP
                                                            IO_PORTF_CR_R
  143 0000005E F04F 00FF       MOV              R0, #0xFF   ; R0 = 0x01 (enable
                                                             commit for PF0)
  144 00000062 6008            STR              R0, [R1]    ; [R1] = R0 = 0x1
  145 00000064         ; set direction register
  146 00000064 491B            LDR              R1, =GPIO_PORTF_DIR_R ; R1 = &G
                                                            PIO_PORTF_DIR_R
  147 00000066 6808            LDR              R0, [R1]    ; R0 = [R1]
  148 00000068 F020 0011       BIC              R0, R0, #(SW1+SW2) ; R0 = R0&~(
                                                            SW1|SW2) (make PF0 
                                                            and PF4 input; PF0 
                                                            and PF4 built-in bu
                                                            ttons)
  149 0000006C 6008            STR              R0, [R1]    ; [R1] = R0
  150 0000006E         ; regular port function
  151 0000006E 491A            LDR              R1, =GPIO_PORTF_AFSEL_R ; R1 = 
                                                            &GPIO_PORTF_AFSEL_R
                                                            
  152 00000070 6808            LDR              R0, [R1]    ; R0 = [R1]
  153 00000072 F020 0011       BIC              R0, R0, #(SW1+SW2) ; R0 = R0&~(
                                                            SW1|SW2) (disable a
                                                            lt funct on PF0 and
                                                             PF4)
  154 00000076 6008            STR              R0, [R1]    ; [R1] = R0
  155 00000078         ; put a delay here if you are seeing erroneous NMI
  156 00000078         ; enable pull-up resistors
  157 00000078 4918            LDR              R1, =GPIO_PORTF_PUR_R ; R1 = &G
                                                            PIO_PORTF_PUR_R
  158 0000007A 6808            LDR              R0, [R1]    ; R0 = [R1]
  159 0000007C F040 0011       ORR              R0, R0, #(SW1+SW2) ; R0 = R0|(S
                                                            W1|SW2) (enable wea
                                                            k pull-up on PF0 an
                                                            d PF4)
  160 00000080 6008            STR              R0, [R1]    ; [R1] = R0
  161 00000082         ; enable digital port
  162 00000082 4917            LDR              R1, =GPIO_PORTF_DEN_R ; R1 = &G
                                                            PIO_PORTF_DEN_R
  163 00000084 6808            LDR              R0, [R1]    ; R0 = [R1]
  164 00000086 F040 0011       ORR              R0, R0, #(SW1+SW2) ; R0 = R0|(S
                                                            W1|SW2) (enable dig
                                                            ital I/O on PF0 and
                                                             PF4)
  165 0000008A 6008            STR              R0, [R1]    ; [R1] = R0
  166 0000008C         ; configure as GPIO
  167 0000008C 4915            LDR              R1, =GPIO_PORTF_PCTL_R ; R1 = &
                                                            GPIO_PORTF_PCTL_R
  168 0000008E 6808            LDR              R0, [R1]    ; R0 = [R1]
  169 00000090 F020 100F       BIC              R0, R0, #0x000F000F ; R0 = R0&~
                                                            0x000F000F (clear p
                                                            ort control field f
                                                            or PF0 and PF4)
  170 00000094 F100 0000       ADD              R0, R0, #0x00000000 ; R0 = R0+0
                                                            x00000000 (configur



ARM Macro Assembler    Page 6 


                                                            e PF0 and PF4 as GP
                                                            IO)
  171 00000098 6008            STR              R0, [R1]    ; [R1] = R0
  172 0000009A         ; disable analog functionality
  173 0000009A 4913            LDR              R1, =GPIO_PORTF_AMSEL_R ; R1 = 
                                                            &GPIO_PORTF_AMSEL_R
                                                            
  174 0000009C F04F 0000       MOV              R0, #0      ; R0 = 0 (disable a
                                                            nalog functionality
                                                             on PF)
  175 000000A0 6008            STR              R0, [R1]    ; [R1] = R0
  176 000000A2 4770            BX               LR          ; return
  177 000000A4         
  178 000000A4         ;------------Board_Input------------
  179 000000A4         ; Read and return the status of the switches.
  180 000000A4         ; Input: none
  181 000000A4         ; Output: R0  0x01 if only Switch 1 is pressed
  182 000000A4         ;         R0  0x10 if only Switch 2 is pressed
  183 000000A4         ;         R0  0x00 if both switches are pressed
  184 000000A4         ;         R0  0x11 if no switches are pressed
  185 000000A4         ; Modifies: R1
  186 000000A4         Board_Input
  187 000000A4 4911            LDR              R1, =SWITCHES ; R1 = &SWITCHES 
                                                            (pointer to locatio
                                                            n of PF0 and PF4)
  188 000000A6 6808            LDR              R0, [R1]    ; R0 = [R1] (read P
                                                            F0 and PF4)
  189 000000A8 4770            BX               LR          ; return
  190 000000AA         
  191 000000AA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  192 000000AC                 END                          ; end of file
              400FE608 
              40004528 
              4000452C 
              40004400 
              40004420 
              4000451C 
              40004080 
              40025520 
              4C4F434B 
              40025524 
              40025400 
              40025420 
              40025510 
              4002551C 
              4002552C 
              40025528 
              40025044 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\switch
.d -o.\switch.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\AR
M\Inc\TI\TM4C123 --predefine="__EVAL SETA 1" --list=.\switch.lst Switch.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 69 in file Switch.s
   Uses
      None
Comment: .text unused
Board_Init 00000048

Symbol: Board_Init
   Definitions
      At line 129 in file Switch.s
   Uses
      At line 73 in file Switch.s
Comment: Board_Init used once
Board_Input 000000A4

Symbol: Board_Input
   Definitions
      At line 186 in file Switch.s
   Uses
      At line 74 in file Switch.s
Comment: Board_Input used once
Switch_Init 00000000

Symbol: Switch_Init
   Definitions
      At line 80 in file Switch.s
   Uses
      At line 71 in file Switch.s
Comment: Switch_Init used once
Switch_Input 00000042

Symbol: Switch_Input
   Definitions
      At line 116 in file Switch.s
   Uses
      At line 72 in file Switch.s
Comment: Switch_Input used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 59 in file Switch.s
   Uses
      At line 139 in file Switch.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTA_AFSEL_R 40004420

Symbol: GPIO_PORTA_AFSEL_R
   Definitions
      At line 43 in file Switch.s
   Uses
      At line 100 in file Switch.s
Comment: GPIO_PORTA_AFSEL_R used once
GPIO_PORTA_AMSEL_R 40004528

Symbol: GPIO_PORTA_AMSEL_R
   Definitions
      At line 48 in file Switch.s
   Uses
      At line 88 in file Switch.s
Comment: GPIO_PORTA_AMSEL_R used once
GPIO_PORTA_CR_R 40004524

Symbol: GPIO_PORTA_CR_R
   Definitions
      At line 47 in file Switch.s
   Uses
      None
Comment: GPIO_PORTA_CR_R unused
GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 45 in file Switch.s
   Uses
      At line 104 in file Switch.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 42 in file Switch.s
   Uses
      At line 96 in file Switch.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTA_LOCK_R 40004520

Symbol: GPIO_PORTA_LOCK_R
   Definitions
      At line 46 in file Switch.s
   Uses
      None
Comment: GPIO_PORTA_LOCK_R unused
GPIO_PORTA_PCTL_R 4000452C

Symbol: GPIO_PORTA_PCTL_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 49 in file Switch.s
   Uses
      At line 92 in file Switch.s
Comment: GPIO_PORTA_PCTL_R used once
GPIO_PORTA_PUR_R 40004510

Symbol: GPIO_PORTA_PUR_R
   Definitions
      At line 44 in file Switch.s
   Uses
      None
Comment: GPIO_PORTA_PUR_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 52 in file Switch.s
   Uses
      At line 151 in file Switch.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 57 in file Switch.s
   Uses
      At line 173 in file Switch.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 56 in file Switch.s
   Uses
      At line 142 in file Switch.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 54 in file Switch.s
   Uses
      At line 162 in file Switch.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 51 in file Switch.s
   Uses
      At line 146 in file Switch.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 55 in file Switch.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 138 in file Switch.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 58 in file Switch.s
   Uses
      At line 167 in file Switch.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 53 in file Switch.s
   Uses
      At line 157 in file Switch.s
Comment: GPIO_PORTF_PUR_R used once
PA5 40004080

Symbol: PA5
   Definitions
      At line 62 in file Switch.s
   Uses
      At line 117 in file Switch.s
Comment: PA5 used once
PF0 40025004

Symbol: PF0
   Definitions
      At line 60 in file Switch.s
   Uses
      None
Comment: PF0 unused
PF4 40025040

Symbol: PF4
   Definitions
      At line 61 in file Switch.s
   Uses
      None
Comment: PF4 unused
SW1 00000010

Symbol: SW1
   Definitions
      At line 64 in file Switch.s
   Uses
      At line 148 in file Switch.s
      At line 153 in file Switch.s
      At line 159 in file Switch.s
      At line 164 in file Switch.s

SW2 00000001

Symbol: SW2
   Definitions
      At line 65 in file Switch.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 148 in file Switch.s
      At line 153 in file Switch.s
      At line 159 in file Switch.s
      At line 164 in file Switch.s

SWITCHES 40025044

Symbol: SWITCHES
   Definitions
      At line 63 in file Switch.s
   Uses
      At line 187 in file Switch.s
Comment: SWITCHES used once
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 67 in file Switch.s
   Uses
      At line 133 in file Switch.s
Comment: SYSCTL_RCGC2_GPIOF used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 66 in file Switch.s
   Uses
      At line 81 in file Switch.s
      At line 131 in file Switch.s

25 symbols
363 symbols in table
